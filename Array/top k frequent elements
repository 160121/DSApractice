class Solution {
public:
    static bool compare(pair<int, int> p1, pair<int, int> p2){
        if (p1.second == p2.second)
            return p1.first > p2.first;
        return p1.second > p2.second;
    }
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int>ans;
        int n=nums.size();
        unordered_map<int, int> mp;
        for (int i = 0; i < n; i++)
            mp[nums[i]]++;
        vector<pair<int, int> > freq_arr(mp.begin(), mp.end());
        sort(freq_arr.begin(), freq_arr.end(), compare);
        for (int i = 0; i < k; i++)
            ans.push_back(freq_arr[i].first);
        return ans;
    }
};
