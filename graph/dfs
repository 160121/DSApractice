#include<bits/stdc++.h>
using namespace std;
class solution{
    public:
    void dfs(int start,vector<int>adj[],int visited[],vector<int>&res){
        visited[start]=1;
        res.push_back(start);
        for(auto it:adj[start]){
            if(!visited[it]){
                dfs(it,adj,visited,res);
            }
        }
    }
    vector<int>dfsofgraph(int V,vector<int>adj[]){
        vector<int>res;
        int visited[V]={0};
        dfs(0,adj,visited,res);
        return res;
    }
};
int main(){
    int vertices,edges;
    cin>>vertices>>edges;
    vector<int>adj[vertices];
    for(int i=0;i<edges;i++){
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    solution obj;
    vector<int>ans=obj.dfsofgraph(vertices,adj);
    for(int i=0;i<ans.size();i++){
        cout<<ans[i];
    }
}
